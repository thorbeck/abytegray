{"file":"abg-nav.abg-router.entry.cjs.js","mappings":";;;;;;AAAA,MAAM,MAAM,GAAG,ygBAAygB;;MCS3gB,GAAG;;;;;kBAGa,KAAK;;EAEhC,iBAAiB;IACf,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;GACpB;EAED,MAAM;IACJ,QACEA,qBACEA,oBACG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,KACpBA,gBAAI,GAAG,EAAE,KAAK,CAAC,IAAI,IACjBA,eAAG,IAAI,EAAE,KAAK,KAAK,CAAC,IAAI,EAAE,iBAAe,IAAI,CAAC,MAAM,IACjD,KAAK,CAAC,KAAK,CACV,CACD,CACN,CAAC,CACC,CACD,EACN;GACH;;;;AChCH,MAAM,SAAS,GAAG,2BAA2B;;MCShC,MAAM;;;;;IASjB,oBAAe,GAAG;;MAGhB,IAAI,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;MAGhE,IAAI,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC;;MAGjH,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;MAC7B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;KAC5B,CAAC;;;;;;;EAIF,aAAa;IACX,IAAI,CAAC,eAAe,EAAE,CAAC;GACxB;EAED,iBAAiB;;IAEf,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;;IAEtB,MAAM,CAAC,gBAAgB,CAAC,YAAY,EAAE;MACpC,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB,CAAC,CAAC;GACJ;EAED,MAAM;IACJ,OAAOA,QAACC,UAAI,IAAC,SAAS,EAAE,IAAI,CAAC,MAAM,GAAS,CAAC;GAC9C;;;;;;;;;;","names":["h","Host"],"sources":["src/components/nav/nav.scss?tag=abg-nav&encapsulation=shadow","src/components/nav/nav.tsx","src/components/router/router.scss?tag=abg-router","src/components/router/router.tsx"],"sourcesContent":["@use \"../util\";\r\n\r\n:host {\r\n  @include util.reset;\r\n  ul {\r\n    display: flex;\r\n    margin: 0;\r\n    padding: var(--size-oscar) var(--size-mike);\r\n    gap: var(--size-mike);\r\n    list-style: none;\r\n    border-radius: var(--size-oscar);\r\n    background: var(--color-mono-yankee);\r\n\r\n    @media (prefers-color-scheme: light) {\r\n      background: var(--color-mono-delta);\r\n    }\r\n  }\r\n\r\n  a {\r\n    color: var(--color-orange-alfa);\r\n    text-decoration: none;\r\n    text-transform: lowercase;\r\n\r\n    &:hover {\r\n      color: var(--color-orange-mike);\r\n    }\r\n\r\n    @media (prefers-color-scheme: light) {\r\n      color: var(--color-mono-zulu);\r\n    }\r\n  }\r\n}\r\n","import { Component, Event, EventEmitter, h, Prop, State } from '@stencil/core';\r\n\r\nimport { NavItem } from './nav.interface';\r\n\r\n@Component({\r\n  tag: 'abg-nav',\r\n  styleUrl: 'nav.scss',\r\n  shadow: true,\r\n})\r\nexport class Nav {\r\n  @Prop() routes: NavItem[];\r\n  @Event() abgNav: EventEmitter<any>;\r\n  @State() active: boolean = false;\r\n\r\n  componentWillLoad() {\r\n    this.abgNav.emit();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav>\r\n        <ul>\r\n          {this.routes.map(route => (\r\n            <li key={route.slug}>\r\n              <a href={`/#${route.slug}`} data-active={this.active}>\r\n                {route.title}\r\n              </a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","abg-router {\r\n  display: block;\r\n}\r\n","import { Component, Event, EventEmitter, h, Host, Prop, State, Watch } from '@stencil/core';\r\n\r\nimport { RouterItem } from './router.interface';\r\n\r\n@Component({\r\n  tag: 'abg-router',\r\n  styleUrl: 'router.scss',\r\n  shadow: false,\r\n})\r\nexport class Router {\r\n  @Prop() home: RouterItem;\r\n  @Prop() notFound: RouterItem;\r\n  @Prop() routes: RouterItem[];\r\n  @State() markup: string;\r\n\r\n  @Event() abgRouter: EventEmitter;\r\n\r\n  // Handles routing based on hashroutes\r\n  locationHandler = async () => {\r\n    // split has if child route\r\n\r\n    let location = window.location.hash.replace('#', '').split('/');\r\n\r\n    // find page routes\r\n    let route = location[0] == '' ? this.home : this.routes.find(item => item.slug === location[0]) || this.notFound;\r\n\r\n    // update based on route\r\n    document.title = route.title;\r\n    this.markup = route.markup;\r\n  };\r\n\r\n  // watch for prop changes\r\n  @Watch('routes')\r\n  routesHandler() {\r\n    this.locationHandler();\r\n  }\r\n\r\n  componentWillLoad() {\r\n    // Send event\r\n    this.abgRouter.emit();\r\n    // listen for hashevents and output to console\r\n    window.addEventListener('hashchange', () => {\r\n      this.locationHandler();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <Host innerHTML={this.markup}></Host>;\r\n  }\r\n}\r\n"],"version":3}