{{#if useShadowDOM}}
import styles from './{{lowerCase name}}.shadow.scss';
import markup from './{{lowerCase name}}.html';
{{else}}
import styles from './{{lowerCase name}}.module.scss';
{{/if}}

{{#if useShadowDOM}}
const template = document.createElement('template');
template.id = 'eos-{{lowerCase name}}';
template.innerHTML = `<style>${styles}</style>${markup}`;
document.body.appendChild(template);
{{/if}}

class {{toPascalCase name}} extends HTMLElement {
  constructor() {
		// Always call super first in constructor
    super();
		{{#if useShadowDOM}}
		 // Get template by id
    const template = document.getElementById('eos-{{lowerCase name}}');
    // Set template content
    const templateContent = template.content;
    // Add shadowroot and add template content
    this.attachShadow({ mode: 'open' }).appendChild(
      templateContent.cloneNode(true)
    );
		{{/if}}
  }

	// When element is added to DOM
  connectedCallback() {
		{{#if useShadowDOM}}
		const heading = this.shadowRoot.querySelector('span');
		heading.innerHTML = `eos-{{lowerCase name}} works!`;
		{{else}}
    this.classList.add(styles.{{lowerCase name}});
		{{/if}}
  }
}

customElements.define('eos-{{lowerCase name}}', {{toPascalCase name}});
